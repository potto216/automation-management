---
- name: Setup General Communications Development Environment
  hosts: comm_dev_group
  become: yes
  gather_facts: yes
  vars_files:
    - ../vault/secrets.yaml

  tasks:
    - name: Install dependencies for Pyenv
      apt:
        name:
          - curl
          - make
          - build-essential
          - libssl-dev
          - zlib1g-dev
          - libbz2-dev
          - libreadline-dev
          - libsqlite3-dev
          - wget
          - curl
          - llvm
          - libncurses5-dev
          - libncursesw5-dev
          - xz-utils
          - tk-dev
          - libffi-dev
          - liblzma-dev
          - git
        state: present
      become: yes
      when: install_python | default (false)

    - name: Install Pyenv
      shell: |
        curl https://pyenv.run | bash
      args:
        creates: "$HOME/.pyenv"
      environment:
        HOME: "/home/user"
      become: yes
      become_user: user
      when: install_python | default (false)

    - name: Set environment variables for Pyenv
      lineinfile:
        path: "$HOME/.bashrc"
        line: "{{ item }}"
      with_items:
        - 'export PYENV_ROOT="$HOME/.pyenv"'
        - 'export PATH="$PYENV_ROOT/bin:$PATH"'
        - 'eval "$(pyenv init --path)"'
      environment:
        HOME: "/home/user"
      become: yes
      become_user: user
      when: install_python | default (false)

    - name: Reload .bashrc to update environment variables
      shell: . ~/.bashrc
      become: yes
      become_user: user
      when: install_python | default (false)

    - name: Install Python using Pyenv
      shell: |
        . /home/user/.bashrc
        if ! pyenv versions | grep -q '{{ python_version }}'; then
          pyenv install '{{ python_version }}'
        fi
      environment:      
        HOME: "/home/user"      
        PATH: "/home/user/.pyenv/bin:{{ ansible_env.PATH }}"
      become: yes
      become_user: user
      when: install_python | default (false)

    - name: Set Python as the global python version
      shell: |
        . /home/user/.bashrc    
        pyenv global '{{ python_version }}'
      environment:
        HOME: "/home/user"      
        PATH: "/home/user/.pyenv/bin:{{ ansible_env.PATH }}"
      become: yes
      become_user: user
      when: install_python | default (false)

    - name: Install Vim
      apt:
        name: vim
        state: present
      become: yes
      when: install_vim | default (false)

    - name: Add .vimrc to /home/user
      copy:
        content: |
          "" "This should be renamed .vimrc and go in the users root path
          "" "will fix the arrow issue
          set nocp

          "" "will set the indent
          set tabstop=2
          "" "set tabstop=4

          set backspace=indent,eol,start

          set number
          "" "syntax highlighting requires full vim support
          set syntax=on
        dest: "/home/user/.vimrc"
        owner: user
        group: user
        mode: '0644'
      become: yes
      become_user: user
      when: install_vim | default (false)

    - name: Install required Rust required packages
      apt:
        name: 
          - curl
          - build-essential
        state: present
      become: yes
      when: install_rust | default (false)

    - name: Download and Run Rustup Installer
      become: yes
      become_user: user
      shell: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      environment:
        HOME: "/home/user"
        USER: "user"
      args:
        creates: "/home/user/.cargo/bin/rustup"
      when: install_rust | default (false)

    - name: Set Environment Variables for Rust
      become: yes
      become_user: user
      lineinfile:
        path: /home/user/.profile
        line: 'export PATH="$HOME/.cargo/bin:$PATH"'
        create: yes
      args:
        insertbefore: EOF
      when: install_rust | default (false)


