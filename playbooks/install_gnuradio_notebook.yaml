---
- name: Setup GNURadio Notebook Development Environment
  hosts: comm_dev
  become: yes
  gather_facts: yes
  vars_files:
    - ../vault/secrets.yaml

  tasks:
    - name: Set destination directory from environment variable
      set_fact:
        remote_root_path: "/home/user/sdr/gnuradio_notebook"
        local_automation_management_dir: "{{ lookup('env', 'HOME') }}/automation_management"
        local_files_dir: "{{ lookup('env', 'HOME') }}/automation_management/files" 

    - name: Ensure destination directory exists
      ansible.builtin.file:
        path: "{{ remote_root_path }}"
        state: directory
        mode: '0755'
      become: yes
      become_user: user

    - name: Check if Python virtual environment .gnuradio_notebook exists
      ansible.builtin.stat:
        path: "{{ remote_root_path }}/.gnuradio_notebook"
      register: venv

    - name: Create Python virtual environment if it doesn't 
      ansible.builtin.shell: |
        command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
        eval "$(pyenv init -)"
        python --version
        python -m venv .gnuradio_notebook
        echo "<Create Python virtual environment if it doesn't> ls -la and the current directory is {`pwd`}"
        ls -la
      args:
        chdir: "{{ remote_root_path }}"
        executable: /bin/bash
      environment:
        PYENV_ROOT: "/home/user/.pyenv"
      become: yes
      become_user: user
      register: shell_output_venv_create
      when: not venv.stat.exists

    - name: Print shell command output virt env
      ansible.builtin.debug: var=shell_output_venv_create.stdout

    - name: Copy Python requirements.txt
      ansible.builtin.copy:
        src: "{{ local_files_dir }}/gnuradio_notebook_python_requirements.txt"
        dest: "{{ remote_root_path }}/requirements.txt"
      become: yes
      become_user: user

    - name: Set permissions for requirements.txt
      ansible.builtin.file:
        path: "{{ remote_root_path }}/requirements.txt"
        owner: user
        group: user
        mode: '0644'
      become: yes
      become_user: user

    - name: Setup the Python environment and notebook
      ansible.builtin.shell: |
        command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
        eval "$(pyenv init -)"
        python --version
        source .gnuradio_notebook/bin/activate
        python -m pip install --upgrade pip
        pip install wheel
        pip install -r requirements.txt
      args:
        chdir: "{{ remote_root_path }}"
        executable: /bin/bash
      environment:
        PYENV_ROOT: "/home/user/.pyenv"  
      register: shell_output
      become: yes
      become_user: user

    - name: Print shell command output from Setup the Python environment and notebook
      ansible.builtin.debug: var=shell_output.stdout

